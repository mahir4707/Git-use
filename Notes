## To get the data or code from github to our local machine then use clone statement

syntax for it:
--> git clone HTTP_link

---
## To Check the status git file 

syntax:
--> git status

### There are four types of status 
1. Untracked - new file added that git doesnot yet track
2. modified - changed
3. staged - file is added but not commited
4. unmodified - file is commited no changes are there

---
## To add the file and changes into repo 
use:
git add "file name"

### To add all
git add .


## Now time to commit the changes 
use:
git commit -m "message to be passed"


# To push the changes on github account
use:
git push origin main

# Init command
Used to create a new git repo

use: 
    git init
    git remote add origin <-link->
    git remote -v  (to verify remote)
    git branch  (to check branch)
    git branch -M main  (to rename branch)
    git push origin main


# Workflow
Github repo create
        |
Clone
        |
changes
        |
Add
        |
Commit
        |
push

# Branch Commands
 
git branch - to check branch

git branch -M main -> to rename branch

git checkout <-branch name-> - to navigate

git checkout -b <-new branch name-> - to create new branch

<<<<<<< HEAD
git branch -d <-branch name-> - to delete branch

# Mergin Code

Two ways
1) git diff <-branch name-> (to compare commits, branches, files and more)

git merge <-branch name-> (to merge 2 branches)

2) create a PR

# Pull Request

it lets you tell others about changes you have pushed to branch in a repository on Github

# Pull Command

git pull origin main

used to fetch and download content from a remote repo and immediately update the local repo to match that content

# Resolving Merge Conflicts 
An event that takes place when Git is unable to automatically resolve difference in code between two commits.

for eg., we have two branches main and feature one 
both have same line of code

let's suppose this 
<p>This is Repo</p>
<p>This is new feature</p>

and we change them differently 
in main branch <p>This is new feature (button)</p>

and in feature branch 
<p>This is new feature (dropdown)</p>

Then this will generate conflict 

# Undoing changes
Case 1: staged changes
        git reset <-file name->
        git reset

Case 2:commited changes (for one commit)
        git reset HEAD~1

Case 3: commited changes (for many commits)
        git reset <-commit hash->
        git reset --hard <-commit hash->

# Fork
A fork is a new repository that shares code and visibility settings with the original "upstream" repository

Fork is a rough copy.



